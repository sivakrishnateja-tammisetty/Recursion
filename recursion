RECURSION:A function that calls itself.(solve a problem by using small instance of the same problem).
    1.ASSUMPTION:what function will do.
    2. LOGIC:Actual recursion equation.
    3.BASE CONDITION:used for stop/terminate the recursion


//PRINTING FIB SERIES FOR GIVEN TERM
#include <iostream>
using namespace std;
int fibanocci(int n)
{
    if(n==1 || n==2)
    {
        return 1;
    }
    return fibanocci(n-1)+fibanocci(n-2);
}
int main() {
   int n=4;
   cout<<fibanocci(n)<<endl;
    return 0;
}

//PRINTING MIN ELEMENT USING RECURSION
#include <iostream>
using namespace std;
int printMIn(int *a,int n,int i,int mn)
{
    if(i==n){return mn;}
    mn=min(mn,a[i]);
    return printMIn(a,n,i+1,mn);
}
int main() {
   int a[]={11,2,4,3,9};
   int n=sizeof(a)/sizeof(a[0]);
   int mn=a[0];
   cout<<printMIn(a,n,0,mn)<<endl;
    return 0;
}

//PRINTING FACTORIAL USING USING RECURSION
#include<iostream>
using namespace std;
int fact(int n)
{
if(n==1 || n==0)
{
return 1;
}
return n*fact(n-1);
}
int main()
{
int n=5;
cout<<fact(n)<<endl;
return 0;}



//PRINT NUMBERS FROM GIVEN NUMBER IN DECREASING ORDER USING RECURSION
#include<iostream>
using namespace std;
void PRINT(int n)
{
    if(n==0)
    {
        return;
    }
    cout<<n<<" ";
    PRINT(n-1);

}
int main()
{
int n=4;

PRINT(n);
return 0;}
